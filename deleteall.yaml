trigger: none

variables:
  kubernetesServiceConnection: 'your-k8s-service-connection'
  namespace: 'your-namespace'

stages:
- stage: CleanupNamespace
  displayName: 'Cleanup Kubernetes Namespace'
  jobs:
    - job: DeleteResources
      displayName: 'Delete All Resources in Namespace'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: Kubernetes@1
          displayName: 'Delete All Resources in Namespace'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
            namespace: '$(namespace)'
            command: 'delete'
            arguments: 'all --all'

        - task: Kubernetes@1
          displayName: 'Delete PVCs'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
            namespace: '$(namespace)'
            command: 'delete'
            arguments: 'pvc --all'



- stage: DebugPVC
  displayName: 'Debug PVC and Pod Status'
  jobs:
    - job: CheckPVC
      displayName: 'Check PVC and Pod Status'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: Kubernetes@1
          displayName: 'List Persistent Volumes'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
            command: 'get'
            arguments: 'pv'

        # Describe all Persistent Volumes for detailed info
        - task: Kubernetes@1
          displayName: 'Describe Persistent Volumes'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
            command: 'describe'
            arguments: 'pv'
        - task: Kubernetes@1
          displayName: 'Describe PVCs'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
            namespace: '$(namespace)'
            command: 'describe'
            arguments: 'pvc'

        - task: Kubernetes@1
          displayName: 'Describe Pods'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
            namespace: '$(namespace)'
            command: 'describe'
            arguments: 'pods'

        - task: Kubernetes@1
          displayName: 'List Storage Classes'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'


